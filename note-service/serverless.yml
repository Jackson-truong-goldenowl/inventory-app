service: inventory-jackson
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: ap-southeast-1
  lambdaHashingVersion: 20201221
  environment:
    INVENTORY_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:PostItem
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
        - dynamodb:BatchGetItem
      Resource: "*"

resources:
  Resources:
    inventoryDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH" 
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.INVENTORY_TABLE}


functions:
  helloLambda:
    handler: handler.index
    events:
     - httpApi:
         path: /index
         method: get 
  getListInventories: 
    handler: inventories/getListInventories.getListInventories
    events:
     - httpApi:
         path: /inventories
         method: get
  discountInventories:
    handler: inventories/discountInventories.discountInventories
    events: 
      - httpApi:
         path: /inventory-discount
         method: put
  create:
    handler: inventories/createInventory.createInventory
    events:
      - httpApi:
          path: /inventory
          method: post
  getInventoy:
    handler: inventories/getInventory.getInventory
    events:
      - httpApi:
          path: /inventory/{id}
          method: get
